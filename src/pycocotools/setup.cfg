## --------------------------------------------------------------------------------------
## isort (sorter and formatter for import statements)
## --------------------------------------------------------------------------------------
[isort]
# Compatibility with black formatter settings:
multi_line_output=3
force_grid_wrap = 0
use_parentheses=True
ensure_newline_before_comments = True
line_length=100
include_trailing_comma=True
skip=./datasets,docs,.circleci
skip_glob=*/__init__.py
extra_standard_library=setuptools,mock
known_THIRDPARTY=dotenv,pytz,youtube_dl,numpy,pandas,wandb,torch,mmf,CLIP,clip,torch,
    pytorch_lightning,icevision,timm,seaborn,torchvision,cv2,IPython,sklearn,matplotlib,
    tqdm,omegaconf,label_studio_sdk,Pillow,pillow,PIL,requests,matplotlib_inline,label_studio_converter
known_MYSELF=pycocotools
no_lines_before=STDLIB
sections=FUTURE,STDLIB,THIRDPARTY,MYSELF,FIRSTPARTY,LOCALFOLDER
default_section=FIRSTPARTY

## --------------------------------------------------------------------------------------
## flake8 linter
## --------------------------------------------------------------------------------------
[flake8]
# Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
format = wemake
show-source = True
statistics = False
doctests = True

# Plugins:
max-complexity = 18
max-line-length = 100

# In some cases, as determined by PEP 8, Black will enforce an equal amount of whitespace around
# slice operators. Due to this, Flake8 will raise E203 whitespace before ':' warnings. Since this
# warning is not PEP 8 compliant, Flake8 should be configured to ignore it via extend-ignore = E203:
extend-ignore = E203

ignore =
    W503, E203, E221, C901, C408, E741, C407, E741, WPS226, WPS305, WPS326, WPS348,
    # Disable some pydocstyle checks:
    # Exclude some pydoctest checks globally:
    D100, D104, D106, D401, W504, X100, RST303, RST304, DAR103, DAR203,
    # Upper case const in a class
    WPS115

select = B,C,E,F,W,T4,B9

per-file-ignores =
	**/__init__.py:F401,F403
    # Enable `assert` keyword and magic numbers for tests:
    tests/*.py: S101, WPS226, WPS432
    # Allow `print` function for hooks:
    hooks/*.py: WPS226
    # Ignore magic numbers in migrations:
    **/migrations/*.py: WPS432

# Excluding some directories:
exclude =
    .circleci
    .ebextensions
    .eggs
    .elasticbeanstalk
    .git
    .venv
    .vscode
    **/migrations
    __pycache__
    *.egg
    build
    coverage_html_report
    databases
    test-results
    venv

## --------------------------------------------------------------------------------------
## pep8 (linter) and autopep8 (formatter)
## --------------------------------------------------------------------------------------
[pep8]
aggressive = 1
experimental = 1
max-line-length = 100
verbose = 1


## --------------------------------------------------------------------------------------
## Pylint
## --------------------------------------------------------------------------------------
[pylint.MASTER]
extension-pkg-whitelist=numpy

[pylint.TYPECHECK]
ignored-modules=numpy
ignored-classes=numpy
generated-members=numpy.*

[pylint.BASIC]

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,x,X,ex,Run,_

[pylint.FORMAT]

# Maximum number of characters on a single line.
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Number of spaces of indent required inside a hanging  or continued line.
# indent-after-paren=8

[pylint."MESSAGES CONTROL"]
# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time.
#enable=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once).
disable=C0330, C0326,
    # Disable "missing module docstring"
    C0114


[tool:pytest]
# Directories that are not visited by pytest collector:
norecursedirs = {{cookiecutter.project_name}} hooks *.egg .eggs dist build docs .tox .git __pycache__

# Extra options:
addopts =
    --strict-markers
    --tb=short
    --doctest-modules


[metadata]
# This includes the license file(s) in the wheel.
# https://wheel.readthedocs.io/en/stable/user_guide.html#including-license-files-in-the-generated-wheel-file
license_files = LICENSE.txt
